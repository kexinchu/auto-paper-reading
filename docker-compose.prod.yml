version: '3.8'

services:
  # SGLang模型服务
  sglang-server:
    build: .
    container_name: qwen-sglang-server-prod
    ports:
      - "8089:8089"
    volumes:
      - /home/kec23008/docker-sys/llm-security/Models:/app/models
      - ./config.yaml:/app/config.yaml
      - ./topics.yaml:/app/topics.yaml
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - MODEL_NAME=/app/models/Qwen3-0.6B
      - HOST=0.0.0.0
      - PORT=8089
      - GPU_MEMORY_UTILIZATION=0.9
      - MAX_MODEL_LEN=4096
    command: >
      python -m sglang.launch_server
      --model-path /app/models/Qwen3-0.6B
      --host 0.0.0.0
      --port 8089
      --trust-remote-code
      --gpu-memory-utilization 0.9
      --max-model-len 4096
      --enable-prefix-caching
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 16G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # 论文阅读应用
  paper-reader:
    build: .
    container_name: paper-reader-app-prod
    depends_on:
      sglang-server:
        condition: service_healthy
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./topics.yaml:/app/topics.yaml
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    environment:
      - SGLANG_SERVER_URL=http://sglang-server:8089
      - TZ=Asia/Shanghai
    command: python main.py
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: paper-reader-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

volumes:
  redis_data:
